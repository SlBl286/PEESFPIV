@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using PEESFPIV.Frontend.States
@using System.Security.Claims
@implements IDisposable
@rendermode InteractiveServer
@inject SidebarState SidebarState

<div class="h-14 flex items-center justify-between @(isOpen ? "ml-64": "") p-2">
    <div class="flex gap-x-2 items-center">
        <button data-drawer-target="sidebar-multi-level-sidebar" @onclick="Toggle"
            data-drawer-toggle="sidebar-multi-level-sidebar" aria-controls="sidebar-multi-level-sidebar" type="button"
            class="inline-flex items-center p-2 mt-2 ms-3 text-sm text-gray-500 rounded-lg  hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 ">
            <span class="sr-only">Open sidebar</span>
            <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg">
                <path clip-rule="evenodd" fill-rule="evenodd"
                    d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z">
                </path>
            </svg>
        </button>
        <p class="text-2xl font-semibold hidden md:block">CMS</p>
    </div>
    <AuthorizeView>
        <Authorized>
            <a href="/cms/auth/logout" class="text-black">
                @context.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Name)?.Value
            </a>
        </Authorized>
    </AuthorizeView>
</div>


@code {
    private bool isOpen;


    protected override async Task OnInitializedAsync()
    {
        await Task.CompletedTask;
        isOpen = SidebarState.IsOpen;
        SidebarState.OnChange += UpdateState;

    }
    private void Toggle()
    {
        SidebarState.Toggle();
    }

    void UpdateState()
    {
        isOpen = SidebarState.IsOpen;
        StateHasChanged();
    }
    public void Dispose()
    {
        SidebarState.OnChange -= UpdateState;

    }
}